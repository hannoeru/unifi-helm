apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unifi.fullname" . }}
  labels:
    {{- include "unifi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "unifi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "unifi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "unifi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: device-control
              containerPort: {{ .Values.unifi.ports.http }}
              protocol: TCP
            - name: web-interface
              containerPort: {{ .Values.unifi.ports.https }}
              protocol: TCP
            - name: stun
              containerPort: 3478
              protocol: UDP
            {{- if .Values.captivePortal.enabled }}
            - name: captive-https
              containerPort: 8843
              protocol: TCP
            - name: captive-http
              containerPort: 8880
              protocol: TCP
            {{- end }}
            - name: speedtest
              containerPort: 6789
              protocol: TCP
            - name: discovery
              containerPort: 10001
              protocol: UDP
          env:
            - name: TZ
              value: {{ .Values.unifi.timezone | quote }}
            - name: PUID
              value: {{ .Values.unifi.puid | quote }}
            - name: PGID
              value: {{ .Values.unifi.pgid | quote }}
            {{- if .Values.mongodbCommunity.enabled }}
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "unifi.fullname" . }}-mongodb-admin-unifi
                  key: username
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "unifi.fullname" . }}-mongodb-admin-unifi
                  key: password
            - name: MONGO_HOST
              value: {{ printf "%s-mongodb-svc.%s.svc.cluster.local" (include "unifi.fullname" .) .Release.Namespace | quote }}
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DBNAME
              value: {{ .Values.mongodbCommunity.database | quote }}
            - name: MONGO_AUTHSOURCE
              value: "admin"
            {{- else if .Values.externalDatabase.enabled }}
            - name: MONGO_HOST
              value: {{ .Values.externalDatabase.host | quote }}
            - name: MONGO_PORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: MONGO_DBNAME
              value: {{ .Values.externalDatabase.database | quote }}
            - name: MONGO_AUTHSOURCE
              value: {{ .Values.externalDatabase.authSource | quote }}
            - name: MONGO_USER
              value: {{ .Values.externalDatabase.username | quote }}
            {{- if .Values.externalDatabase.existingSecret }}
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret }}
                  key: {{ .Values.externalDatabase.passwordKey }}
            {{- else if .Values.externalDatabase.password }}
            - name: MONGO_PASS
              value: {{ .Values.externalDatabase.password | quote }}
            {{- end }}
            {{- if .Values.externalDatabase.options }}
            - name: MONGO_OPTIONS
              value: {{ .Values.externalDatabase.options | quote }}
            {{- end }}
            {{- if .Values.externalDatabase.tls.enabled }}
            - name: MONGO_TLS
              value: "true"
            {{- if .Values.externalDatabase.tls.existingSecret }}
            - name: MONGO_TLS_CA_FILE
              value: "/etc/ssl/mongodb/{{ .Values.externalDatabase.tls.caKey }}"
            - name: MONGO_TLS_CERT_FILE
              value: "/etc/ssl/mongodb/{{ .Values.externalDatabase.tls.certKey }}"
            - name: MONGO_TLS_KEY_FILE
              value: "/etc/ssl/mongodb/{{ .Values.externalDatabase.tls.keyKey }}"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .Values.unifi.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /status
              port: web-interface
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /status
              port: web-interface
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: unifi-data
              mountPath: /config
            {{- if and .Values.externalDatabase.enabled .Values.externalDatabase.tls.enabled .Values.externalDatabase.tls.existingSecret }}
            - name: mongodb-tls
              mountPath: /etc/ssl/mongodb
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: unifi-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "unifi.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if and .Values.externalDatabase.enabled .Values.externalDatabase.tls.enabled .Values.externalDatabase.tls.existingSecret }}
        - name: mongodb-tls
          secret:
            secretName: {{ .Values.externalDatabase.tls.existingSecret }}
            defaultMode: 0400
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
