suite: test mongodbcommunity
templates:
  - mongodbcommunity.yaml
tests:
  - it: should not render MongoDBCommunity when disabled
    set:
      mongodbCommunity.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should render MongoDBCommunity with default values
    set:
      mongodbCommunity.enabled: true
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Secret
        documentIndex: 0
      - isKind:
          of: MongoDBCommunity
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-unifi-mongodb
        documentIndex: 1
      - equal:
          path: spec.members
          value: 1
        documentIndex: 1
      - equal:
          path: spec.type
          value: ReplicaSet
        documentIndex: 1
      - equal:
          path: spec.version
          value: "7.0.0"
        documentIndex: 1

  - it: should render MongoDBCommunity with custom version
    set:
      mongodbCommunity.enabled: true
      mongodbCommunity.version: "6.0.0"
    asserts:
      - equal:
          path: spec.version
          value: "6.0.0"
        documentIndex: 1

  - it: should render MongoDBCommunity with custom database
    set:
      mongodbCommunity.enabled: true
      mongodbCommunity.database: "custom-db"
    asserts:
      - contains:
          path: spec.users[0].roles
          content:
            name: dbOwner
            db: unifi
        documentIndex: 1
      - contains:
          path: spec.users[0].roles
          content:
            name: dbOwner
            db: unifi_stat
        documentIndex: 1
      - contains:
          path: spec.users[0].roles
          content:
            name: dbOwner
            db: unifi_audit
        documentIndex: 1

  - it: should render MongoDBCommunity with persistence enabled
    set:
      mongodbCommunity.enabled: true
      mongodbCommunity.persistence.enabled: true
      mongodbCommunity.persistence.size: "10Gi"
      mongodbCommunity.persistence.storageClass: "fast-ssd"
    asserts:
      - equal:
          path: spec.statefulSet.spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: "10Gi"
        documentIndex: 1
      - equal:
          path: spec.statefulSet.spec.volumeClaimTemplates[0].spec.storageClassName
          value: "fast-ssd"
        documentIndex: 1

  - it: should render MongoDBCommunity with custom resources
    set:
      mongodbCommunity.enabled: true
      mongodbCommunity.resources:
        limits:
          cpu: "2"
          memory: "2Gi"
        requests:
          cpu: "1"
          memory: "1Gi"
    asserts:
      - equal:
          path: spec.statefulSet.spec.template.spec.containers[0].resources.limits.cpu
          value: "2"
        documentIndex: 1
      - equal:
          path: spec.statefulSet.spec.template.spec.containers[0].resources.limits.memory
          value: "2Gi"
        documentIndex: 1
      - equal:
          path: spec.statefulSet.spec.template.spec.containers[0].resources.requests.cpu
          value: "1"
        documentIndex: 1
      - equal:
          path: spec.statefulSet.spec.template.spec.containers[0].resources.requests.memory
          value: "1Gi"
        documentIndex: 1

  - it: should render MongoDB secret with random password
    set:
      mongodbCommunity.enabled: true
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-unifi-mongodb-password
        documentIndex: 0
      - isKind:
          of: Secret
        documentIndex: 0
      - equal:
          path: type
          value: Opaque
        documentIndex: 0
      - exists:
          path: stringData.password
        documentIndex: 0

  - it: should render MongoDBCommunity with user configuration
    set:
      mongodbCommunity.enabled: true
      mongodbCommunity.users:
        - name: "test-user"
          db: "admin"
          passwordSecretRef:
            name: test-password
          roles:
            - name: dbOwner
              db: testdb
          scramCredentialsSecretName: test-scram
    asserts:
      - equal:
          path: spec.users[0].name
          value: "test-user"
        documentIndex: 1
      - equal:
          path: spec.users[0].db
          value: "admin"
        documentIndex: 1
      - equal:
          path: spec.users[0].passwordSecretRef.name
          value: "test-password"
        documentIndex: 1
      - equal:
          path: spec.users[0].roles[0].name
          value: "dbOwner"
        documentIndex: 1
      - equal:
          path: spec.users[0].roles[0].db
          value: "testdb"
        documentIndex: 1
      - equal:
          path: spec.users[0].scramCredentialsSecretName
          value: "test-scram"
        documentIndex: 1