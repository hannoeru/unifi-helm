suite: test serviceaccount
templates:
  - serviceaccount.yaml
tests:
  - it: should not render serviceaccount by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should render serviceaccount when enabled
    set:
      serviceAccount.create: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: RELEASE-NAME-unifi

  - it: should render serviceaccount with custom name
    set:
      serviceAccount.create: true
      serviceAccount.name: custom-service-account
    asserts:
      - equal:
          path: metadata.name
          value: custom-service-account

  - it: should render serviceaccount with annotations
    set:
      serviceAccount.create: true
      serviceAccount.annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/my-role
        custom.annotation/test: value
    asserts:
      - equal:
          path: metadata.annotations["eks.amazonaws.com/role-arn"]
          value: arn:aws:iam::123456789012:role/my-role
      - equal:
          path: metadata.annotations["custom.annotation/test"]
          value: value

  - it: should render serviceaccount with correct labels
    set:
      serviceAccount.create: true
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: unifi
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
      - exists:
          path: metadata.labels["app.kubernetes.io/version"]
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm

  - it: should not render serviceaccount when explicitly disabled
    set:
      serviceAccount.create: false
    asserts:
      - hasDocuments:
          count: 0